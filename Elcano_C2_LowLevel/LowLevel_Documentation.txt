static struct hist; // holds data current and past speeds

<!--CAN WE REMOVE THIS?--!> void print7headers(bool); 				// prints a list of strings, (time, turn, auto, etc) to use with print7.
<!--CAN WE REMOVE THIS?--!>	void print7(bool, unsigned long[7]); 	// prints data associated with fields in print7headers.

void LogData(unsigned long[7], SerialData *sensors); // logs data to the computer, formatted to be saved in a spreadsheet
				// utilizes show7seg

<!--CAN WE REMOVE THIS?--!> void printHeaders(); //prints 11 headers (similar to print7headers)

void circleRoutine(unsigned long seconds, unsigned long &rcAuto); 	// uses a SerialData object with processHighLevel to get the trike to drive in a circle
void squareRoutine(unsigned long sides, unsigned long &rcAuto);		// tells the trike to drive in a square. Does not currently use processHighLevel

<!--CAN WE MAKE THIS RETURN VOID?--!> byte processRC(); 	// processes the signals from the remote controll to perform actions such as driving or automatic behaviors
				// utilizes E_Stop();
				// utilizes isAutomatic();
				// utilizes doAutoMovement();
				// utilizes doManualMovement();
					
boolean isAutomatic(); 	// returns true if the left joystick is above the center position (turns off manual control) 
						// or false if it's lower than the center (vehicle controlled by remote)
						
void doAutoMovement(); 	// determines which automatic behavoir to perform
						// perform circleRoutine at tick 1
						// TODO: perform circle Routine at tick 2
						// TODO: determine behaviour for tick 3
				// utilizes circleRoutine
				
TODO: void applySpeed(float);	// takes a desired speed (in kph), calculates error between current speed desired and passes that to Throttle_PID
				// utilizes Throttle_PID();